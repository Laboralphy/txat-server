var O2 = require('o2');

/**
 * Classe abstraite de Plugin
 * A étendre pour créer un vrai plugin.
 */ 
var O876_Mediator_Plugin = O2.createClass({
	_oMediator: null,
	
	/**
	 * Renvoie le nom du plugin défini en constante.
	 * Le nom du plugin est défini dans la classe fille.
	 * @return string
	 */
	getName: function() {
		return '';
	},
	
	/**
	 * Le plugin peut contenir une fonction init() qui
	 * sera invoqué dés que le plugin sera branché au mediateur
	 */
	
	/**
	 * Permet d'enregistrer un certain type de signal que le plugin va gérer
	 * auprès du médiateur
	 * @param string sType type de signal (envoyé par l'application)
	 */
	register: function(sType) {
		this._oMediator.registerPluginSignal(sType, this);
	},
	
	/**
	 * Annule l'enregistrement d'un type de signal précédemment
	 * enrregistré avec register()
	 * @param string sType type de signal
	 */
	unregister: function(sType) {
		this._oMediator.unregisterPluginSignal(sType, this);
	},

	/**
	 * Défini le médiateur
	 * @param Mediator.Mediator m
	 */
	setMediator: function(m) {
		this._oMediator = m;
	},
	
	getMediator: function() {
		return this._oMediator;
	},
	
	/**
	 * Raccourcis facilitant la communication inter plugin
	 */
	sendSignal: function() {
		return this._oMediator.sendSignal.apply(this._oMediator, Array.prototype.slice.call(arguments, 0));
	}
});

module.exports = O876_Mediator_Plugin;
