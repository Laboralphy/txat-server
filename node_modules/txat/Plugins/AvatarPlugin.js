var O2 = require('o2');
var Mediator = require('mediator');
var fs = require('fs');

var AvatarPlugin = O2.extendClass(Mediator.Plugin, {
	
	PATH_IMAGES: "scripts/Txat/addons/avatar/images/avatars/",
	PATH_DEFAULT: "scripts/Txat/addons/avatar/images/128_default/",
	oWords: null,
	oFunctions: null,
	
	getName: function() {
		return 'Avatar';
	},
	
	init: function() {
		this.register('userPref');
		this.register('message');
	},
	
	computeDisplayName: function(oUser) {
		//si pas encore d'image
		var url = oUser.getData('avatarImage');
		var sName = oUser.getName();
		if(url == null) {
			url = this.PATH_DEFAULT + 'default.png';
			this._copyImage("www/txat/" + url, "www/txat/" + this.PATH_IMAGES + sName + ".png");
			oUser.setData("avatarImage", url);
		}
		//on modifie l'item ici
		
		oUser.setDisplayName ( '<img src="' + 
		oUser.getData('avatarImage') +
		'" class="avatarItem"><span class="nick">' + 
		oUser.getName() +
		'</span>' ) ;
	},
	
	userPref: function(oUser, sVariable, sValue) {
		console.log(sValue);
		var sName = oUser.getName();
		if(sVariable == "avatarImage") {
			if(sValue.substring(0,4) == "data") {
				//base64 source
				var reg = new RegExp('^data:image\/(.*);base64,(.*)');
				var matches = sValue.matche(reg, '');
				var sSrc = matches[2];
				var buf = new Buffer(sSrc, 'base64');
				var data = buf.toString('ascii');
				var sExtension = matches[1];
				var url = this.PATH_IMAGES + sName + "." + sExtension;
				fs.writeFile("www/txat/" + url, data);
				oUser.setData("avatarImage", url);
				
			} else {
				var url = sValue;
				var sFilename = url.split('/').pop();
				var sExtension = sFilename.split('.').pop();
				this._copyImage("www" + url, "www/txat/" + this.PATH_IMAGES + sName + "." + sExtension);
//				fs.createReadStream("www" + url).pipe(fs.createWriteStream("www/txat/" + this.PATH_IMAGES + sName + "." + sExtension));
			}
		} 
	},
	
	
	message: function(ctx) {
		this.computeDisplayName(ctx.user);
	},
	
	
	_copyImage: function(srcImage, destImage) {
		fs.createReadStream(srcImage).pipe(fs.createWriteStream(destImage));
	}
});

module.exports = AvatarPlugin;
