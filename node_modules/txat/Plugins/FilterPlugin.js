var O2 = require('o2');
var Mediator = require('mediator');

var FilterPlugin = O2.extendClass(Mediator.Plugin, {
	
	oWords: null,
	oFunctions: null,
	
	getName: function() {
		return 'Filter';
	},
	
	init: function() {
		this.register('config');
		this.register('message');
	},
	
	config: function(oConfig) {
		var c = oConfig[this.getName()];
		this.setWords(c.words);
	},
	
	setWords: function(a) {
		this.oWords = {};
		if (a) {
			for (var i in a) {
				this.oWords[i] = a[i];
			}
		}
	},
	
	processFilter: function(sMessage) {
		var sRep;
		var rx;
		var w, xWord, s, sWord;
		for (w in this.oWords) {
			rx = new RegExp(w, 'gi');
			if (sMessage.match(rx)) {
				sWord = this.oWords[w];
				if (typeof sWord == 'function') {
					sWord = sWord();
				}
				sMessage = sMessage.replace(rx, sWord);
			}
		}
		return sMessage;
	},
	
	message: function(ctx) {
		ctx.message = this.processFilter(ctx.message);
	}
});

module.exports = FilterPlugin;
