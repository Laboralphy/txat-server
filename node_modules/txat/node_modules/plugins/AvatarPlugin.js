var O2 = require('o2');
var Mediator = require('mediator');
var fs = require('fs');

var AvatarPlugin = O2.extendClass(Mediator.Plugin, {

	PATH_IMAGES : "scripts/Txat/addons/avatar/images/avatars/",
	PATH_DEFAULT : "scripts/Txat/addons/avatar/images/128_default/",
	
	COLOR_DEFAULT: "#000000",
	BG_DEFAULT: "#ffffff",
	BORDER_DEFAULT:"#000000",
	
	oWords : null,
	oFunctions : null,

	getName : function() {
		return 'Avatar';
	},

	init : function() {
		this.register('userPref');
		this.register('message');
	},

	userPref : function(oUser, sVariable, sValue) {
		var sName = oUser.getName();
		switch (sVariable) {
		case "avatarImage":
			if (sValue.substring(0, 4) == "data") {
				// base64 source
				var reg = new RegExp('^data:image\/(.*);base64,(.*)');
				var matches = sValue.match(reg, '');
				var sSrc = matches[2];
				var buf = new Buffer(sSrc, 'base64');
				var data = buf.toString('ascii');
				var sExtension = matches[1];
				var url = this.PATH_IMAGES + sName + "." + sExtension;
				fs.writeFile("www/txat/" + url, data);
				oUser.setData("avatarImage", url);

			} else {
				var url = sValue;
				var sFilename = url.split('/').pop();
				var sExtension = sFilename.split('.').pop();
				this._copyImage("www" + url, "www/txat/" + this.PATH_IMAGES
						+ sName + "." + sExtension);
				// fs.createReadStream("www" +
				// url).pipe(fs.createWriteStream("www/txat/" + this.PATH_IMAGES
				// + sName + "." + sExtension));
			}
			break;
		case "avatarColor":
		case "avatarBg":
		case "avatarBorder":
			oUser.setData(sVariable, sValue);
			break;
		}
	},

	message : function(ctx) {
		var oUser = ctx.user;
		//si pas encore d'image
		var url = oUser.getData('avatarImage');
		var sName = oUser.getName();
		if (url == null) {
			url = this.PATH_DEFAULT + 'default.png';
			this._copyImage("www/txat/" + url, "www/txat/" + this.PATH_IMAGES
					+ sName + ".png");
			oUser.setData("avatarImage", url);
		}
		
		//si pas de couleur text
		var color = oUser.getData('avatarColor');
		if(color == null) {
			color = this.COLOR_DEFAULT;
			oUser.setData("avatarColor",this.COLOR_DEFAULT);
		}
		
		//si pas de couleur bg
		var bg = oUser.getData('avatarBg');
		if(bg == null) {
			bg = this.BG_DEFAULT;
			oUser.setData("avatarBg",this.BG_DEFAULT);
		}
		
		//si pas de couleur border
		var border = oUser.getData('avatarColor');
		if(border == null) {
			border = this.BORDER_DEFAULT;
			oUser.setData("avatarBorder",this.BORDER_DEFAULT);
		}
		
		// on modifie l'item ici
		ctx.avatar = {image: url, color: color, bg: bg, border:border};
	},

	_copyImage : function(srcImage, destImage) {
		fs.createReadStream(srcImage).pipe(fs.createWriteStream(destImage));
	}
});

module.exports = AvatarPlugin;
